Last login: Sun Oct 12 15:55:19 on ttys000
amal@MacBook-Air-Amal-2 ~ %  psql -U postgres -d postgres -p 5432
Password for user postgres: 
psql (14.19 (Homebrew), server 17.6)
WARNING: psql major version 14, server major version 17.
         Some psql features might not work.
Type "help" for help.

postgres=# CREATE TABLE Students (
    student_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);

CREATE TABLE Departments (
    department_id SERIAL PRIMARY KEY,
    department_name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE Courses (
    course_id SERIAL PRIMARY KEY,
    course_code VARCHAR(20) NOT NULL UNIQUE,
    course_name VARCHAR(100) NOT NULL,
    department_id INTEGER NOT NULL
);
postgres=# ALTER TABLE Courses 
ADD CONSTRAINT fk_courses_department
FOREIGN KEY (department_id) 
REFERENCES Departments(department_id);
ALTER TABLE
postgres=# CREATE TABLE Student_Profiles (
    profile_id SERIAL PRIMARY KEY,
    student_id INTEGER UNIQUE NOT NULL,
    date_of_birth DATE,
    address TEXT,
    CONSTRAINT fk_student_profile
    FOREIGN KEY (student_id) 
    REFERENCES Students(student_id)
    ON DELETE CASCADE
);
CREATE TABLE
postgres=# CREATE TABLE Enrollments (
    enrollment_id SERIAL PRIMARY KEY,
    student_id INTEGER NOT NULL,
    course_id INTEGER NOT NULL,
    grade DECIMAL(3,2),
    CONSTRAINT fk_enrollments_student
    FOREIGN KEY (student_id) 
    REFERENCES Students(student_id),
    CONSTRAINT fk_enrollments_course
    FOREIGN KEY (course_id) 
    REFERENCES Courses(course_id)
);
CREATE TABLE
postgres=# INSERT INTO Departments (department_name) VALUES
('Computer Science'),
('Mathematics'),
('Physics');

INSERT INTO Students (first_name, last_name, email) VALUES
('John', 'Doe', 'john.doe@university.edu'),
('Jane', 'Smith', 'jane.smith@university.edu');

INSERT INTO Courses (course_code, course_name, department_id) VALUES
('CS101', 'Introduction to Programming', 1),
('MATH101', 'Calculus I', 2);

INSERT INTO Enrollments (student_id, course_id, grade) VALUES
(1, 1, 3.8),
(1, 2, 3.5),
(2, 1, 3.9);
INSERT 0 3
INSERT 0 2
INSERT 0 2
INSERT 0 3
postgres=# SELECT * FROM Students;
SELECT * FROM Departments;
SELECT * FROM Courses;
SELECT * FROM Enrollments;
 student_id | first_name | last_name |           email           | enrollment_date 
------------+------------+-----------+---------------------------+-----------------
          1 | John       | Doe       | john.doe@university.edu   | 2025-10-12
          2 | Jane       | Smith     | jane.smith@university.edu | 2025-10-12
(2 rows)

...skipping...
 student_id | first_name | last_name |           email           | enrollment_date 
------------+------------+-----------+---------------------------+-----------------
          1 | John       | Doe       | john.doe@university.edu   | 2025-10-12
          2 | Jane       | Smith     | jane.smith@university.edu | 2025-10-12
(2 rows)
...skipping...
 student_id | first_name | last_name |           email           | enrollment_date 
------------+------------+-----------+---------------------------+-----------------
          1 | John       | Doe       | john.doe@university.edu   | 2025-10-12
          2 | Jane       | Smith     | jane.smith@university.edu | 2025-10-12
(2 rows)

 department_id | department_name  | building 
---------------+------------------+----------
             1 | Computer Science | 
             2 | Mathematics      | 
             3 | Physics          | 
(3 rows)

 course_id | course_code |         course_name         | credits | department_id 
-----------+-------------+-----------------------------+---------+---------------
         1 | CS101       | Introduction to Programming |       3 |             1
         2 | MATH101     | Calculus I                  |       3 |             2
(2 rows)

 enrollment_id | student_id | course_id | grade 
---------------+------------+-----------+-------
             1 |          1 |         1 |  3.80
             2 |          1 |         2 |  3.50
             3 |          2 |         1 |  3.90
(3 rows)

postgres=# SELECT 
    s.first_name, 
    s.last_name, 
    c.course_code, 
    c.course_name,
    e.grade
FROM Students s
JOIN Enrollments e ON s.student_id = e.student_id
JOIN Courses c ON e.course_id = c.course_id;
 first_name | last_name | course_code |         course_name         | grade 
------------+-----------+-------------+-----------------------------+-------
 John       | Doe       | CS101       | Introduction to Programming |  3.80
 John       | Doe       | MATH101     | Calculus I                  |  3.50
 Jane       | Smith     | CS101       | Introduction to Programming |  3.90
(3 rows)
postgres=# ALTER TABLE Enrollments 
ADD CONSTRAINT fk_enrollments_student
FOREIGN KEY (student_id) 
REFERENCES Students(student_id)
ON DELETE CASCADE;
ERROR:  constraint "fk_enrollments_student" for relation "enrollments" already exists
postgres=# ALTER TABLE Enrollments 
DROP CONSTRAINT fk_enrollments_student;
ALTER TABLE
postgres=# ALTER TABLE Enrollments 
ADD CONSTRAINT fk_enrollments_student
FOREIGN KEY (student_id) 
REFERENCES Students(student_id)
ON DELETE CASCADE;
ALTER TABLE
postgres=# DELETE FROM Students WHERE student_id = 1;
SELECT * FROM Enrollments;
DELETE 1
 enrollment_id | student_id | course_id | grade 
---------------+------------+-----------+-------
             3 |          2 |         1 |  3.90
(1 row)

postgres=# CREATE TABLE Professors (
    professor_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department_id INTEGER,
    CONSTRAINT fk_professors_department
    FOREIGN KEY (department_id) 
    REFERENCES Departments(department_id)
    ON DELETE SET NULL
);
CREATE TABLE
postgres=# INSERT INTO Professors (first_name, last_name, department_id) VALUES
('Alice', 'Johnson', 1),
('Bob', 'Wilson', 2);
INSERT 0 2
postgres=# SELECT 
    p.first_name,
    p.last_name,
    d.department_name
FROM Professors p
JOIN Departments d ON p.department_id = d.department_id;
 first_name | last_name | department_name  
------------+-----------+------------------
 Alice      | Johnson   | Computer Science
 Bob        | Wilson    | Mathematics
(2 rows)
